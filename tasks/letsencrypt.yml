- name: Create keys folder
  file:
    dest: /etc/pki/cert/private
    owner: root
    group: root
    state: directory

- name: Create certificate requests folder
  file:
    dest: /etc/pki/cert/csr
    owner: root
    group: root
    state: directory

- name: Create certificate folder
  file:
    dest: /etc/nginx/ssl
    owner: root
    group: root
    state: directory

- name: Create ACME challenge folder
  file:
    dest: /var/www/html/.well-known/acme-challenge/
    owner: root
    group: root
    state: directory

- name: Create account key
  command: "openssl genrsa -out {{ letsencrypt_account_key }} 4096"
  args:
    creates: "{{ letsencrypt_account_key }}"

- name: Create certificate key
  command: "openssl genrsa -out {{ letsencrypt_certificate_key }} 4096"
  args:
    creates: "{{ letsencrypt_certificate_key }}"
  register: result

- name: Generate CSR
  command: "openssl req -new -sha512 -key {{ letsencrypt_certificate_key }} -out {{ letsencrypt_certificate_csr }} -subj /CN={{ jenkins_server_name }}"
  when: result | changed

- name: ACME step one
  letsencrypt:
    account_email: "gil.gnome@gmail.com"
    account_key: "{{ letsencrypt_account_key }}"
    agreement: https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf
    challenge: http-01
    csr: "{{ letsencrypt_certificate_csr }}"
    dest: "{{ letsencrypt_certificate }}"
  register: acme_data

- name: Copy Let's Encrypt challenge
  copy:
    dest: "/var/www/html/{{ acme_data['challenge_data']['jenkins.plone.org']['http-01']['resource'] }}"
    content: "{{ acme_data['challenge_data']['jenkins.plone.org']['http-01']['resource_value'] }}"
  when: acme_data|changed

- name: ACME step two
  letsencrypt:
    account_key: "{{ letsencrypt_account_key }}"
    challenge: http-01
    csr: "{{ letsencrypt_certificate_csr }}"
    dest: "{{ letsencrypt_certificate }}"
    data: "{{ acme_data }}"
